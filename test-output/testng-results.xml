<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="9" failed="0" ignored="0" total="10" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="69445" started-at="2019-02-11T21:05:14Z" finished-at="2019-02-11T21:06:23Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="69445" started-at="2019-02-11T21:05:14Z" finished-at="2019-02-11T21:06:23Z">
      <class name="com.receipting.test.PSFFetchData">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.receipting.test.PSFFetchData@5b12b668]" name="setUp" is-config="true" duration-ms="51802" started-at="2019-02-11T21:05:14Z" finished-at="2019-02-11T21:06:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="getRequestData(java.lang.String, java.lang.String)[pri:1, instance:com.receipting.test.PSFFetchData@5b12b668]" name="getRequestData" duration-ms="5" started-at="2019-02-11T21:06:05Z" description="poDispatched And PartialyReceived" data-provider="mainDataProviders" finished-at="2019-02-11T21:06:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PO(s) Dispatched]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[PO(s) Dispatched Test case is disabled from the configuration File (data.properties)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: PO(s) Dispatched Test case is disabled from the configuration File (data.properties)
at com.receipting.util.TestUtil.skipTest(TestUtil.java:215)
at com.receipting.test.PSFFetchData.getRequestData(PSFFetchData.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestData -->
        <test-method status="SKIP" signature="getRequestData(java.lang.String, java.lang.String)[pri:1, instance:com.receipting.test.PSFFetchData@5b12b668]" name="getRequestData" duration-ms="4" started-at="2019-02-11T21:06:05Z" description="poDispatched And PartialyReceived" data-provider="mainDataProviders" finished-at="2019-02-11T21:06:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Partially Received]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Partially Received Test case is disabled from the configuration File (data.properties)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Partially Received Test case is disabled from the configuration File (data.properties)
at com.receipting.util.TestUtil.skipTest(TestUtil.java:215)
at com.receipting.test.PSFFetchData.getRequestData(PSFFetchData.java:69)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestData -->
        <test-method status="SKIP" signature="getPoCancelledAndCompletedData(java.lang.String, java.lang.String)[pri:2, instance:com.receipting.test.PSFFetchData@5b12b668]" name="getPoCancelledAndCompletedData" duration-ms="1" started-at="2019-02-11T21:06:06Z" description="PO(s) Canceled/completed/Received" data-provider="PoCanceledAndCompletedDataProvider" finished-at="2019-02-11T21:06:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PO(s) Canceled]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[PO(s) Canceled Test case is disabled from the configuration File (data.properties)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: PO(s) Canceled Test case is disabled from the configuration File (data.properties)
at com.receipting.util.TestUtil.skipTest(TestUtil.java:215)
at com.receipting.test.PSFFetchData.getPoCancelledAndCompletedData(PSFFetchData.java:118)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPoCancelledAndCompletedData -->
        <test-method status="SKIP" signature="getPoCancelledAndCompletedData(java.lang.String, java.lang.String)[pri:2, instance:com.receipting.test.PSFFetchData@5b12b668]" name="getPoCancelledAndCompletedData" duration-ms="3" started-at="2019-02-11T21:06:06Z" description="PO(s) Canceled/completed/Received" data-provider="PoCanceledAndCompletedDataProvider" finished-at="2019-02-11T21:06:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PO(s) Completed]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[PO(s) Completed Test case is disabled from the configuration File (data.properties)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: PO(s) Completed Test case is disabled from the configuration File (data.properties)
at com.receipting.util.TestUtil.skipTest(TestUtil.java:215)
at com.receipting.test.PSFFetchData.getPoCancelledAndCompletedData(PSFFetchData.java:118)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPoCancelledAndCompletedData -->
        <test-method status="SKIP" signature="getPoCancelledAndCompletedData(java.lang.String, java.lang.String)[pri:2, instance:com.receipting.test.PSFFetchData@5b12b668]" name="getPoCancelledAndCompletedData" duration-ms="1" started-at="2019-02-11T21:06:06Z" description="PO(s) Canceled/completed/Received" data-provider="PoCanceledAndCompletedDataProvider" finished-at="2019-02-11T21:06:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Received]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Received Test case is disabled from the configuration File (data.properties)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Received Test case is disabled from the configuration File (data.properties)
at com.receipting.util.TestUtil.skipTest(TestUtil.java:215)
at com.receipting.test.PSFFetchData.getPoCancelledAndCompletedData(PSFFetchData.java:118)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPoCancelledAndCompletedData -->
        <test-method status="PASS" signature="getSciQuestData()[pri:3, instance:com.receipting.test.PSFFetchData@5b12b668]" name="getSciQuestData" duration-ms="17289" started-at="2019-02-11T21:06:06Z" description="SciQuest" finished-at="2019-02-11T21:06:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSciQuestData -->
        <test-method status="SKIP" signature="getIncorrectPOData(java.lang.String, java.lang.String)[pri:4, instance:com.receipting.test.PSFFetchData@5b12b668]" name="getIncorrectPOData" duration-ms="1" started-at="2019-02-11T21:06:23Z" description="Incorrect PO" data-provider="incorrectPoDataProviders" finished-at="2019-02-11T21:06:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid PO Format -Incorrect length]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[XF0123456]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Invalid PO Format -Incorrect length Test case is disabled from the configuration File (data.properties)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Invalid PO Format -Incorrect length Test case is disabled from the configuration File (data.properties)
at com.receipting.util.TestUtil.skipTest(TestUtil.java:215)
at com.receipting.test.PSFFetchData.getIncorrectPOData(PSFFetchData.java:265)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getIncorrectPOData -->
        <test-method status="SKIP" signature="getIncorrectPOData(java.lang.String, java.lang.String)[pri:4, instance:com.receipting.test.PSFFetchData@5b12b668]" name="getIncorrectPOData" duration-ms="1" started-at="2019-02-11T21:06:23Z" description="Incorrect PO" data-provider="incorrectPoDataProviders" finished-at="2019-02-11T21:06:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid format, no corresponding PO in PS Finance]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PS0000123456]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Valid format, no corresponding PO in PS Finance Test case is disabled from the configuration File (data.properties)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Valid format, no corresponding PO in PS Finance Test case is disabled from the configuration File (data.properties)
at com.receipting.util.TestUtil.skipTest(TestUtil.java:215)
at com.receipting.test.PSFFetchData.getIncorrectPOData(PSFFetchData.java:265)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getIncorrectPOData -->
        <test-method status="SKIP" signature="getIncorrectPOData(java.lang.String, java.lang.String)[pri:4, instance:com.receipting.test.PSFFetchData@5b12b668]" name="getIncorrectPOData" duration-ms="1" started-at="2019-02-11T21:06:23Z" description="Incorrect PO" data-provider="incorrectPoDataProviders" finished-at="2019-02-11T21:06:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid Business Unit Code]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[XF0000123456]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Invalid Business Unit Code Test case is disabled from the configuration File (data.properties)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Invalid Business Unit Code Test case is disabled from the configuration File (data.properties)
at com.receipting.util.TestUtil.skipTest(TestUtil.java:215)
at com.receipting.test.PSFFetchData.getIncorrectPOData(PSFFetchData.java:265)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getIncorrectPOData -->
        <test-method status="SKIP" signature="getTravelRelatedData()[pri:4, instance:com.receipting.test.PSFFetchData@5b12b668]" name="getTravelRelatedData" duration-ms="1" started-at="2019-02-11T21:06:23Z" description="Travel Realted" finished-at="2019-02-11T21:06:23Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[PO Dispatched-Travel Test case is disabled from the configuration File (data.properties)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: PO Dispatched-Travel Test case is disabled from the configuration File (data.properties)
at com.receipting.util.TestUtil.skipTest(TestUtil.java:215)
at com.receipting.test.PSFFetchData.getTravelRelatedData(PSFFetchData.java:165)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTravelRelatedData -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.receipting.test.PSFFetchData@5b12b668]" name="tearDown" is-config="true" duration-ms="275" started-at="2019-02-11T21:06:23Z" finished-at="2019-02-11T21:06:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.receipting.test.PSFFetchData -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
